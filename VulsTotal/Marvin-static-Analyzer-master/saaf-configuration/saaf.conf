############################
# Default files and folders#
############################

#The directory where we store the actual apps (apks).
subdir.apps=apps/
#The directory where we create directories for analyzed apps.
subdir.analyzed=bytecode/

#the directory where SAAF extracts the content of an APK-File (relative to the applicaiton folder)
#subdir.apk_content=apk_content

#the directory where SAAF where SAAF stores the decompiled files (relative to the applicaiton folder)
#subdir.decompiled=bytecode

#the folder where reports are written if no other path is specified. 
#reporting.output.folder=reports

#the folder where we look for templates. Default is
#reporting.templates.folder=templates

#the folder where we write the pictures of the flow graphs
#subdir.cfgs=cfgs

##################################
# 		Database Settings#
##################################
# Note:The database and user must already exist. SAAF will only create the tables. 
# The values below show the defaults used by saaf
# If your configuration does not deviate from these values you need not uncomment the settings

#Database should not be used at all. Default: false
db.disable=true

#the jdbc driver to use
#db.driver=com.mysql.jdbc.Driver
#the database connection string 
#db.connection.string=jdbc:mysql://localhost/saaf
#the username
#db.user=saafuser
#the password
#db.password=saafpass

#################################
# Initial Pattern Sources       #
#################################
#datasource.patterns.backtracking=conf/backtracking-patterns.xml
#datasource.patterns.heuristic=conf/heuristic-patterns.xml
#datasource.adnetworks=conf/AdNetworks.xml
#datasource.permissions=conf/permissions.xml

#################################
# 	Datasource Validation	#
#################################
#datasource.schema.backtracking=conf/schema/backtracking-patterns.xsd
#datasource.schema.heuristic=conf/schema/heuristic-patterns.xsd
#datasource.schema.adnetworks=conf/AdNetworks.xsd
#datasource.schema.permissions=conf/schema/permissions.xsd


#################################
#Configuration for the reporting#
#################################
#name of the default template group (i.e where to look for the template)
#reporting.templates.group.default=xml.stg

#name of the actual default template within the template group
#reporting.templates.template.default=report

#pattern that is used for naming the reports
#currently you can access properties of analysis (which is an instance of de.rub.syssec.saaf.saaf.logicTier.Analysis)
#and time which is simply the output from System.currentTimeMillis()
#reporting.output.naming.pattern =<analysis.app.applicationName>-<time>.xml

#############################
# Configuration of analysis	#
#############################

#Are we descending into sub-directories.
#analysis.recursive=false

#whether we should do heuristic analysis. Default is true.
analysis.heuristic.enable=false 

#Do program slicing analysis. Default is true.
#analysis.backtrack.enable=true

#Do similarity checks for analyzed applications
analysis.similarity.enable=false

#Drop the database and clean the directories before starting to analyze
#analysis.drop=false

#Remove the unpacked/analyzed content on completion
#analysis.keep.files=false

#Decompile into java code. 
analysis.java.enable=false

#Generate files with control-flow-graphs.
analysis.flowgraphs.enable=false

#Generate a report for the analysis.
#analysis.reporting.enable=false

#Generate fuzzy hashes for analyzed files.
analysis.fuzzyhashing.enable=false

#whether the analysis should run in commandline mode (batch)
analysis.headless=true

#whether we should quit analyzing as soon as an error occurs
#analysis.errorhandling.quit=false

#whether we should skip applications that have been analyzed before.
#analysis.skip=false

#whether we should keep only one analysis result per application.
#analysis.exactlyone=false

#whether analysis steps should include packages/compilation units contained in ad-frameworks. 
#analysis.include.adpackages=true

#Number of levels to analyze when doing backtracking 
analysis.maxfuzzylevel=4

#Generate control-flow graphs for methods that belong to advertising frameworks.
#cfg.include.ads=true


#########################
#	Heuristic analysis	#
#########################
#Consider the manifest-based patterns 
#heuristic.patterns.manifest.enable=true

#Consider the invocation-based patterns
#heuristic.patterns.invoke.enable=true

#Consider the smali-based patterns
#heuristic.patterns.smali.enable=true)

#Consider the invocation-based patterns
#heuristic.patterns.method.enable=true

#Consider the superclass-based patterns
#heuristic.patterns.superclass.enable=true

#Consider the patterns to detect patched code
#heuristic.patterns.patched.enable=true

#consider the cryptoblock-based patterns
#heuristic.patterns.crypto.enable=true

#############################
#	Logging configuration	#
#############################
#NOTE: For a more fine grained control see conf/log4j.properties

#Log to a separate file for the analyzed apk.
#logging.separate=false

#where to write the specific logs
#logging.logfolder=logs

#Use coloring in log output
#logging.color=false

#Use an inverted color scheme (for white terminal backgrounds).
#logging.color.inverted=false

#####################
#	Multi-Threading	#
#####################
#Should the analysis be multi-threaded#
multithreading.enable=true

#How many threads should be used
multithreading.threads=3

#########################
#	External programs	#
#########################
external.jad=/usr/bin/jad
external.dot=/usr/bin/dot
external.ssdeep=/usr/bin/ssdeep

#the image viewer used to open the cfgs created by the gui
#%f will be replaced by the path to the image
viewer.images = eog %f

#indicates the xml viewer used to open the report file created by the gui
#%f will be replaced by the path to the reportfile
viewer.reports = firefox %f

#What to do with framework files at ~/apktool/framework/1.apk
#if the version of apktool installed by the user is older than the
#version shipped with SAAF
#Possible values: 
#		DONT_TOUCH
#		RENAME,
#		DELETE
apktool.frameworks=DONT_TOUCH
